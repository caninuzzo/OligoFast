% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/OligoCheckR.R
\name{OligoCheckR}
\alias{OligoCheckR}
\title{Check and keep similar oligonucleotides}
\usage{
OligoCheckR(
  OligoFound,
  filtGaps = TRUE,
  pOcc = 0.9,
  maxDeg = 1,
  plot = TRUE,
  outpath
)
}
\arguments{
\item{OligoFound}{(mandatory) it should be the output from OligoFindR() function, the dataframe with the oligonucleotides and their characteristics.}

\item{filtGaps}{(mandatory, default: TRUE) if TRUE, the oligonucleotides with gaps are removed from the analysis.}

\item{pOcc}{(mandatory, default: 0.9) a threshold from 0 to 1. It is a percentage related to the number of clusters. The theorical maximum 1 means 100\% so the oligonucleotides should appears in all the clusters to be kept.
with default setting, the oligonucleotides that appear in more than 90\% of the clusters are kept. Naturally, the higher is pOcc, the stronger should be the oligonucleotide.}

\item{maxDeg}{(mandatory, default: 1) the maximum number of degenerated nucleotides allowed within the oligonucleotides.
As a reminder, the 'degeneration degree' of the nucleotides is dependent to the threshold fixed in the previous function for the argument of the same name.}

\item{plot}{(optional, default: TRUE) if TRUE, creates an overview of the most abundant oligonucleotides and their location on a graph, using ggplot2.
The picture is a new variable created named "oligOverview" (print(oligOverview) to display it).}

\item{outpath}{(optional) the path to the FOLDER in which the function outputs will be stored.}
}
\value{
Another dataframe of the remaining and most abundant oligonucleotides.
}
\description{
This function allows to look for the most abundant similar oligonucleotides from each consensus to keep
the most redundants which are above a threshold defined by the user.
}
\note{
Example made using default settings
To save the dataframe (as .Rdata) in a given folder (here "JellyOutputs")
add the following argument: outpath = "path_to/JellyOutputs"
}
\examples{
\dontrun{
JellyOligoChecked <- OligoCheckR(JellyOligoFound, filtGaps = TRUE, nOcc = 56, plot = TRUE)
}
}
