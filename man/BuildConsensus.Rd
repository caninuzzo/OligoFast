% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/BuildConsensus.R
\name{BuildConsensus}
\alias{BuildConsensus}
\title{Build consensus sequences for each cluster.}
\usage{
BuildConsensus(
  AlignedClust,
  ntThresHi = 0.9,
  ntThresLo = 0.3,
  ignGap = FALSE,
  outpath,
  suppData = FALSE
)
}
\arguments{
\item{AlignedClust}{(mandatory) the output from ShuffleAndAlign() which is a list of clusters of aligned sequences.}

\item{ntThresHi}{(mandatory, set to 0.9 by default) a nucleotide at the given position will be kept in the consensus sequence
if its observation frequency (0->1) is equal or higher to this threshold.}

\item{ntThresLo}{(mandatory, set to 0.3 by default) if the frequency of the most observed nucleotide at a given position is
below this threshold, then it will result as an ambiguous base (i.e. 'N') for this position.
Moreover, when ignGap=FALSE, if the observation frequency of gaps (i.e. '-') for this position is ABOVE this threshold, then the
corresponding nucleotide will be put in lowercase in the consensus sequence to highlight its weakness.}

\item{ignGap}{(mandatory, set to FALSE by default) consider or not the gaps (i.e. '-') in the sequence alignments. To get more
accurate results, ignGap should be FALSE (as default) but in some cases if the user wants to remove gaps it is possible by setting TRUE.}

\item{outpath}{(optional) the path to the FOLDER in which the function outputs will be stored.}

\item{suppData}{(mandatory, set to FALSE by default) if TRUE, an object is created: a list of nucleotides frequency matrixes for each cluster}
}
\value{
A list of consensus sequences (character) resulting from each clusters.
}
\description{
This function aims to build a consensus sequence for each cluster of aligned sequences according to parameters
set by the user.
}
\note{
Example made using default settings
To save the different consensus (as .Rdata) in a given folder (here "JellyOutputs")
add the following argument: outpath = "path_to/JellyOutputs"
}
\examples{
\dontrun{
JellyConsensus <- BuildConsensus(JellyAlignments, ntThresHi=0.9, ntThresLo=0.3, ignGap=FALSE, suppData=FALSE)
}
}
